<html>
<body>
	<div id="calendarBtn" class='btn' onclick='(this.getAttribute("data-calendarToggle"))?(this.removeAttribute("data-calendarToggle")):(this.setAttribute("data-calendarToggle","true"))'>
		<span class="calendar-outline"></span>
		<span class="text-date"></span> 
		<b class="caret"></b>
	</div>
	<div class='dropdown-menu daterangepicker'>
		<div class='ranges'>
			<ul>
				<li data-value='today' class="active" onmouseover='rangeChange(this,"certIssuanceWrapper")'>Today</li>
				<li data-value='yesterday' onmouseover='rangeChange(this,"certIssuanceWrapper")' >Yesterday</li>
				<li data-value='last7days' onmouseover='rangeChange(this,"certIssuanceWrapper")' >Last 7 Days</li>
				<li data-value='last30days' onmouseover='rangeChange(this,"certIssuanceWrapper")' >Last 30 Days</li>
				<li data-value='custom' onmouseover='rangeChange(this,"certIssuanceWrapper")' >Custom Range</li>
			</ul>
			<div class='range_inputs'>
				<div>
					<label for="daterangepicker_start">From</label>
					<input class="input-mini" type="text" name="daterangepicker_start"  onclick='this.blur();otlDisplayCalendar(this,"mm/dd/yyyy hh:mm:ss");' />
				</div>
				<div style='float:right'>
					<label for="daterangepicker_end">To</label>
					<input class="input-mini" type="text" name="daterangepicker_end"  onclick='this.blur();otlDisplayCalendar(this,"mm/dd/yyyy hh:mm:ss");' />
				</div>
				<div style='text-align:center'>
					<div class="btn successBtn">Apply</div>
					&nbsp;
					<div class="btn" onclick="$('certIssuanceWrapper').querySelector('#calendarBtn').removeAttribute('data-calendarToggle');">Cancel</div>
				</div>
			</div>
		</div>
	</div>			
</body>
<style>
/*******range pickers starts**********/
	#columns > #colToggle[data-colToggle='true'] + #dropdown-menu
	{
		display:block;
		top: 97%;
		opacity:1;
		padding:10px;
		top: 100%;
		transform:translateY(0%);
	}
	#calendarBtn[data-calendarToggle='true'] + .dropdown-menu
	{
		display:block;
		opacity:1;
		top: 50%;
		transform:translateY(0%);
	}
	#columns
	{
		position: relative;
		z-index:1;
		display: inline-block;
		margin:5px 0;
		vertical-align: middle;
		box-sizing: border-box;
	}
	.fa-columns:before,.fa-columns:after
	{
		content:'';
		display: inline-block;
		box-sizing: border-box;
		width:7.5px;
		height:12.5px;
		background:transparent;
		border:solid 1px #444;
		border-top:solid 3px #444;
		line-height: 1;
		-webkit-font-smoothing: antialiased;
	}
	.fa-columns:before
	{
		border-top-left-radius:1.5px;
		border-bottom-left-radius:1.5px;
		width:6px;
		border-right:none;
	}	
	.fa-columns:after
	{
		border-top-right-radius:1.5px;
		border-bottom-right-radius:1.5px;
		border-left:solid 0.1px #777;
	}	
	.dropdown-menu:before
	{
		content: "";
		border-bottom: 7px solid rgba(0, 0, 0, 0.2);
		border-left: 7px solid transparent;
		border-right: 7px solid transparent;
		display: inline-block;
		position: absolute;
		top: -7px;
		left: auto;
		right: 9px;
	}
	.dropdown-menu:after
	{
		content: '';
		position: absolute;
		top: -6px;
		right: 10px;
		display: inline-block;
		border-right: 6px solid transparent;
		border-bottom: 6px solid #fff;
		border-left: 6px solid transparent;
	}
	.dropdown-menu
	{
		-webkit-transition: all 150ms linear;
		-moz-transition: all 150ms linear;
		-o-transition: all 150ms linear;
		-ms-transition: all 150ms linear;
		transition: all 150ms linear;
		
		-ms-transform:translateY(-1%);
		-moz-transform:translateY(-1%);
		-o-transform:translateY(-1%);
		-webkit-transform:translateY(-1%);
		transform:translateY(-1%);
		
		margin-top: -20px;
		right: 0;
		left: auto;
		margin: 0;
		padding: 0;
		border-radius: 10px;
		z-index: 2;
		-webkit-box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.125);
		box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.125);
		position: absolute;
		top: 96%;
		opacity:0;
		display: none;
		float: left;
		min-width: 260px;
		font-size: 14px;
		text-align: left;
		list-style: none;
		border:1px solid rgba(0, 0, 0, 0.15);
		background-color: #fff;
	}
	#dropdown-menu label
	{
		display: block;
		padding: 5px 20px;
		border-bottom: 1px solid #eee;
		clear: both;
		margin-bottom: 0;
		font-weight: normal;
		white-space:nowrap;
	}
	.daterangepicker
	{
		padding:4px;
		position:absolute;
		top:40%;
		min-width: 160px;
		border: 1px solid rgba(0, 0, 0, 0.15);
		font-size: 14px;
		list-style: none;
		-ms-transform:translateY(-1%);
		-moz-transform:translateY(-1%);
		-o-transform:translateY(-1%);
		-webkit-transform:translateY(-1%);
		transform:translateY(-1%);
	}
	.ranges
	{
		float: right;
		margin: 4px;
		width: 200px;
		text-align: left;
	}
	.daterangepicker .ranges ul 
	{
		list-style: none;
		margin: 0;
		padding: 0;
	}
	.daterangepicker .ranges li 
	{
		font-size: 13px;
		background: #f5f5f5;
		border: 1px solid #f5f5f5;
		color: #ffb732;
		padding: 3px 12px;
		margin-bottom: 8px;
		-webkit-border-radius: 5px;
		-moz-border-radius: 5px;
		border-radius: 5px;
		cursor: pointer;
	}
	.daterangepicker .ranges li.active, .daterangepicker .ranges li:hover 
	{
		background: #ffb732;
		border: 1px solid #ffb732;
		color: #fff;
	}
	.daterangepicker .ranges .range_inputs>div 
	{
		float: left;
	}
	.daterangepicker .ranges .range_inputs>div:nth-child(2) {
		padding-left: 11px;
	}
	.range_inputs input,.range_inputs label
	{
		cursor:default;
	}
	.daterangepicker .ranges label {
		color: #333;
		display: block;
		font-size: 11px;
		font-weight: normal;
		height: 20px;
		line-height: 20px;
		margin-bottom: 2px;
		text-shadow: #fff 1px 1px 0px;
		text-transform: uppercase;
		width: 74px;
	}
	.daterangepicker .ranges .input-mini {
		background-color: #eee;
		border: 1px solid #ccc;
		border-radius: 4px;
		color: #555;
		display: block;
		font-size: 11px;
		height: 30px;
		line-height: 30px;
		vertical-align: middle;
		margin: 0 0 10px 0;
		padding: 0 6px;
		width: 80px;
	}
	.calendar-outline:before
	{
		content:'\01F4C5';
	}
	.calendar-outline
	{
		display: inline-block;
		font-family: "Ionicons";
		font-style: normal;
		font-weight: normal;
		box-sizing: border-box;
		color: #333333;
		line-height: 1;
		-webkit-font-smoothing: antialiased;
	}
	.pull-right .caret
	{
		border-top-color: #333333;
		margin-left: 0;
		display: inline-block;
		width: 0;
		height: 0;
		margin-left: 2px;
		vertical-align: middle;
		border-top: 4px solid;
		border-right: 4px solid transparent;
		border-left: 4px solid transparent;
	}
	/*******range pickers ends**********/
</style>
<script>
/*****************Calendar*******************/
function rangeClassChange(elem,wrapper,cb)
{
	for(var i=0;i<elem.parentNode.children.length;i++)
		removeClass(elem.parentNode.children[i],'active');
	addClass(elem,'active');
	if(elem.getAttribute('data-value')!=='custom')
	{
		rangeChange(elem,wrapper);
		$('calendarBtn').removeAttribute("data-calendarToggle");
	}
	if(cb) cb();
}
function rangeChange(elem,wrapper)
{
	var prevFrmDate = $(wrapper).querySelector('input[name="daterangepicker_start"]').value;
	var prevToDate =  $(wrapper).querySelector('input[name="daterangepicker_end"]').value;
	var prevRange = $(wrapper).querySelector('.text-date').innerHTML;
	elem.onmouseout = function()
	{
		frmDate.value = prevFrmDate;
		toDate.value = prevToDate;
		$(wrapper).querySelector('.text-date').innerHTML = prevRange;
	};
	var dateInstance = new Date();
	var dateValue = otlToday = dateInstance.getDate();
	var frmDate = $(wrapper).querySelector('input[name="daterangepicker_start"]'), toDate = $(wrapper).querySelector('input[name="daterangepicker_end"]');
	var range = elem.getAttribute('data-value');
	
	var dateInstance = new Date();
	
	switch(range)
	{
		case 'today':
			
			frmDate.value = monthPrefix(dateInstance)+'/'+zeroPrefix(dateInstance.getDate())+'/'+dateInstance.getFullYear()+' 00:00:00';
            toDate.value = monthPrefix(dateInstance)+'/'+zeroPrefix(dateInstance.getDate())+'/'+dateInstance.getFullYear()+' '+zeroPrefix(dateInstance.getHours())+':'+zeroPrefix(dateInstance.getMinutes())+':'+zeroPrefix(dateInstance.getSeconds());
			$(wrapper).querySelector('.text-date').innerHTML = formatDate(new Date(dateInstance));
		break;
		case 'yesterday':
			toDate.value = monthPrefix(dateInstance)+'/'+zeroPrefix(dateInstance.getDate())+'/'+dateInstance.getFullYear()+' '+zeroPrefix(dateInstance.getHours())+':'+zeroPrefix(dateInstance.getMinutes())+':'+zeroPrefix(dateInstance.getSeconds());
            var myDate = new Date(dateInstance);
			myDate.setDate(myDate.getDate() - 1);
            frmDate.value = monthPrefix(myDate)+'/'+zeroPrefix(myDate.getDate())+'/'+myDate.getFullYear()+' '+myDate.getHours()+':'+myDate.getMinutes()+':'+myDate.getSeconds();
			$(wrapper).querySelector('.text-date').innerHTML = (formatDate(new Date(myDate)))+' - '+(formatDate(new Date(dateInstance)));
		break;
		case 'last7days':
			toDate.value = monthPrefix(dateInstance)+'/'+zeroPrefix(dateInstance.getDate())+'/'+dateInstance.getFullYear()+' '+zeroPrefix(dateInstance.getHours())+':'+zeroPrefix(dateInstance.getMinutes())+':'+zeroPrefix(dateInstance.getSeconds());
            var myDate = new Date(dateInstance);
			myDate.setDate(myDate.getDate() - 6);
            frmDate.value = monthPrefix(myDate)+'/'+zeroPrefix(myDate.getDate())+'/'+myDate.getFullYear()+' '+myDate.getHours()+':'+myDate.getMinutes()+':'+myDate.getSeconds();
			$(wrapper).querySelector('.text-date').innerHTML = (formatDate(new Date(myDate)))+' - '+(formatDate(new Date(dateInstance)));
		break;
		case 'last30days':
			toDate.value = monthPrefix(dateInstance)+'/'+zeroPrefix(dateInstance.getDate())+'/'+dateInstance.getFullYear()+' '+zeroPrefix(dateInstance.getHours())+':'+zeroPrefix(dateInstance.getMinutes())+':'+zeroPrefix(dateInstance.getSeconds());
            var myDate = new Date(dateInstance);
			myDate.setDate(myDate.getDate() - 29);
            frmDate.value = monthPrefix(myDate)+'/'+zeroPrefix(myDate.getDate())+'/'+myDate.getFullYear()+' '+myDate.getHours()+':'+myDate.getMinutes()+':'+myDate.getSeconds();
			$(wrapper).querySelector('.text-date').innerHTML = (formatDate(new Date(myDate)))+' - '+(formatDate(new Date(dateInstance)));
		break;
		case 'custom':
			frmDate.focus();
		break;
		default:
		break;
	}
    function monthPrefix(datestring)
    {
		var d = new Date(datestring);
    	var month = Number(d.getMonth())+1;
        if(Number(month)<10)
        	month = '0'+month;
		
    	return month;
    }
	function formatDate(date) {
	  var monthNames = [
		"Jan", "Feb", "Mar",
		"Apr", "May", "Jun", "Jul",
		"Aug", "Sep", "Oct",
		"Nov", "Dec"
	  ];

	  var day = date.getDate();
	  var monthIndex = date.getMonth();
	  var year = date.getFullYear();

	  return monthNames[monthIndex] + ' ' + day + ',' + year;//Oct 30, 2013 - Nov 29, 2013
	}
}
function zeroPrefix(num)
{
	if(num<10)
		num = '0'+num;
	
	return num;
}
function customdateRange(wrapper)
{
	var frmDate = $(wrapper).querySelector('input[name="daterangepicker_start"]').value.split('/');
	var toDate = $(wrapper).querySelector('input[name="daterangepicker_end"]').value.split('/');
	var frmmonth = Number(frmDate[0])-1;
	var tomonth = Number(toDate[0])-1;
	var frmYr = Number(frmDate[2].split(' ')[0]);
	var toYr = Number(toDate[2].split(' ')[0]);
	var monthNames = [
		"Jan", "Feb", "Mar",
		"Apr", "May", "Jun", "Jul",
		"Aug", "Sep", "Oct",
		"Nov", "Dec"
	];
	frmmonth = monthNames[frmmonth];
	tomonth = monthNames[tomonth];
	
	//Oct 30, 2013 - Nov 29, 2013
	$(wrapper).querySelector('.text-date').innerHTML = (frmmonth+' '+frmDate[1] +', '+ frmYr)+' - '+(tomonth+' '+toDate[1] +', '+ toYr);
}
</script>
</html>
